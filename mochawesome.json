{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 5,
    "pending": 0,
    "failures": 5,
    "testsRegistered": 10,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-07-25T11:11:39.967Z",
    "end": "2025-07-25T11:12:31.193Z",
    "duration": 51226
  },
  "results": [
    {
      "uuid": "a1343f4b-42b0-42d3-953e-b420055ea147",
      "title": "",
      "fullFile": "cypress/e2e/step_definitions/cadastro.feature",
      "file": "cypress/e2e/step_definitions/cadastro.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0a0980be-1059-4eba-8b49-d0e8b4539a14",
          "title": "Cadastro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cadastro com todos os campos preenchidos e saldo ativado",
              "fullTitle": "Cadastro Cadastro com todos os campos preenchidos e saldo ativado",
              "timedOut": null,
              "duration": 2871,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d0b98c75-8dfb-4fb5-a5c9-d237d8bfd2f9",
              "parentUUID": "0a0980be-1059-4eba-8b49-d0e8b4539a14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher nome",
              "fullTitle": "Cadastro Cadastro sem preencher nome",
              "timedOut": null,
              "duration": 2142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "da95e95d-90ec-4433-b39c-c0dc8a16160c",
              "parentUUID": "0a0980be-1059-4eba-8b49-d0e8b4539a14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher email",
              "fullTitle": "Cadastro Cadastro sem preencher email",
              "timedOut": null,
              "duration": 6872,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Email não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Email não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "e0597ecc-d384-4e15-abfa-2100ef7ff8f7",
              "parentUUID": "0a0980be-1059-4eba-8b49-d0e8b4539a14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher senha",
              "fullTitle": "Cadastro Cadastro sem preencher senha",
              "timedOut": null,
              "duration": 6835,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Senha não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Senha não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "8bd73ea4-541d-4f12-8c8c-2a88f547bded",
              "parentUUID": "0a0980be-1059-4eba-8b49-d0e8b4539a14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher confirmação de senha",
              "fullTitle": "Cadastro Cadastro sem preencher confirmação de senha",
              "timedOut": null,
              "duration": 6769,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Confirmar senha não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Confirmar senha não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "53d82db1-59a9-4906-ab71-8627e136646a",
              "parentUUID": "0a0980be-1059-4eba-8b49-d0e8b4539a14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro com senha e confirmação diferentes",
              "fullTitle": "Cadastro Cadastro com senha e confirmação diferentes",
              "timedOut": null,
              "duration": 6804,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'As senhas devem ser iguais' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'As senhas devem ser iguais' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "35e0ac1b-3ffe-4246-8e96-e2eccaf92895",
              "parentUUID": "0a0980be-1059-4eba-8b49-d0e8b4539a14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0b98c75-8dfb-4fb5-a5c9-d237d8bfd2f9",
            "da95e95d-90ec-4433-b39c-c0dc8a16160c"
          ],
          "failures": [
            "e0597ecc-d384-4e15-abfa-2100ef7ff8f7",
            "8bd73ea4-541d-4f12-8c8c-2a88f547bded",
            "53d82db1-59a9-4906-ab71-8627e136646a",
            "35e0ac1b-3ffe-4246-8e96-e2eccaf92895"
          ],
          "pending": [],
          "skipped": [],
          "duration": 32293,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1f9de5f5-f2a4-47f3-b516-86327436229b",
      "title": "",
      "fullFile": "cypress/e2e/step_definitions/login.feature",
      "file": "cypress/e2e/step_definitions/login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5e2bedee-f661-4487-9cec-083864a84517",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tentativa de login sem preencher campos obrigatórios",
              "fullTitle": "Login Tentativa de login sem preencher campos obrigatórios",
              "timedOut": null,
              "duration": 5559,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: expected '[ <p.input__warging>, 5 more... ]' to contain text 'Usuário e senha precisam ser preenchidos', but the text was 'É campo obrigatórioÉ campo obrigatório'",
                "estack": "AssertionError: Timed out retrying after 5000ms: expected '[ <p.input__warging>, 5 more... ]' to contain text 'Usuário e senha precisam ser preenchidos', but the text was 'É campo obrigatórioÉ campo obrigatório'\n    at LoginPage.verificarMensagemCampoObrigatorio (cypress/e2e/pages/loginPage.js:25:39)\n    at Context.eval (cypress/e2e/step_definitions/login/login.js:47:12)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": "- 'É campo obrigatórioÉ campo obrigatório'\n+ 'Usuário e senha precisam ser preenchidos'\n"
              },
              "uuid": "bb82e9c8-45ae-4e0a-a83b-90f96b286527",
              "parentUUID": "5e2bedee-f661-4487-9cec-083864a84517",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login com usuário inválido",
              "fullTitle": "Login Tentativa de login com usuário inválido",
              "timedOut": null,
              "duration": 772,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "615763a4-174b-4f10-8997-334de718f2c3",
              "parentUUID": "5e2bedee-f661-4487-9cec-083864a84517",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login com sucesso",
              "fullTitle": "Login Login com sucesso",
              "timedOut": null,
              "duration": 1936,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "902c1c07-6d5c-44f2-820b-8c3cb5751171",
              "parentUUID": "5e2bedee-f661-4487-9cec-083864a84517",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout do sistema",
              "fullTitle": "Login Logout do sistema",
              "timedOut": null,
              "duration": 1998,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a0270d2c-d830-4f53-9741-3aad76143021",
              "parentUUID": "5e2bedee-f661-4487-9cec-083864a84517",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "615763a4-174b-4f10-8997-334de718f2c3",
            "902c1c07-6d5c-44f2-820b-8c3cb5751171",
            "a0270d2c-d830-4f53-9741-3aad76143021"
          ],
          "failures": [
            "bb82e9c8-45ae-4e0a-a83b-90f96b286527"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10265,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}