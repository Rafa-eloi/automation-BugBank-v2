{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 5,
    "pending": 0,
    "failures": 5,
    "testsRegistered": 10,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-07-23T11:12:11.493Z",
    "end": "2025-07-23T11:13:03.458Z",
    "duration": 51965
  },
  "results": [
    {
      "uuid": "5379c9d0-fc49-4623-9221-fed178003297",
      "title": "",
      "fullFile": "cypress/e2e/step_definitions/cadastro.feature",
      "file": "cypress/e2e/step_definitions/cadastro.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5f486a1d-bb72-42be-9922-81c61002f475",
          "title": "Cadastro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cadastro com todos os campos preenchidos e saldo ativado",
              "fullTitle": "Cadastro Cadastro com todos os campos preenchidos e saldo ativado",
              "timedOut": null,
              "duration": 3516,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ee65c2c4-4609-4632-8655-fa2754a45884",
              "parentUUID": "5f486a1d-bb72-42be-9922-81c61002f475",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher nome",
              "fullTitle": "Cadastro Cadastro sem preencher nome",
              "timedOut": null,
              "duration": 1830,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b6e06f7e-1e5a-448d-b12b-eb255f0d2a6c",
              "parentUUID": "5f486a1d-bb72-42be-9922-81c61002f475",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher email",
              "fullTitle": "Cadastro Cadastro sem preencher email",
              "timedOut": null,
              "duration": 6857,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Email não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Email não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "e4f98000-5bda-474f-93a5-fcc8a0d2e4cf",
              "parentUUID": "5f486a1d-bb72-42be-9922-81c61002f475",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher senha",
              "fullTitle": "Cadastro Cadastro sem preencher senha",
              "timedOut": null,
              "duration": 6846,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Senha não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Senha não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "a866805d-cfb0-4f7a-9253-745a3088c149",
              "parentUUID": "5f486a1d-bb72-42be-9922-81c61002f475",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher confirmação de senha",
              "fullTitle": "Cadastro Cadastro sem preencher confirmação de senha",
              "timedOut": null,
              "duration": 6749,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Confirmar senha não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Confirmar senha não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "3cda2a04-abb5-4d95-a442-f888b8da0684",
              "parentUUID": "5f486a1d-bb72-42be-9922-81c61002f475",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro com senha e confirmação diferentes",
              "fullTitle": "Cadastro Cadastro com senha e confirmação diferentes",
              "timedOut": null,
              "duration": 6722,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'As senhas devem ser iguais' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'As senhas devem ser iguais' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "bb2e530d-41ca-4bf1-9e77-f344fe561fc7",
              "parentUUID": "5f486a1d-bb72-42be-9922-81c61002f475",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee65c2c4-4609-4632-8655-fa2754a45884",
            "b6e06f7e-1e5a-448d-b12b-eb255f0d2a6c"
          ],
          "failures": [
            "e4f98000-5bda-474f-93a5-fcc8a0d2e4cf",
            "a866805d-cfb0-4f7a-9253-745a3088c149",
            "3cda2a04-abb5-4d95-a442-f888b8da0684",
            "bb2e530d-41ca-4bf1-9e77-f344fe561fc7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 32520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7124ba0c-e9c9-4134-af58-c5503a7957e1",
      "title": "",
      "fullFile": "cypress/e2e/step_definitions/login.feature",
      "file": "cypress/e2e/step_definitions/login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bfc4f79f-41d9-48e8-9820-ba820240feed",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tentativa de login sem preencher campos obrigatórios",
              "fullTitle": "Login Tentativa de login sem preencher campos obrigatórios",
              "timedOut": null,
              "duration": 5462,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: expected '[ <p.input__warging>, 5 more... ]' to contain text 'Usuário e senha precisam ser preenchidos', but the text was 'É campo obrigatórioÉ campo obrigatório'",
                "estack": "AssertionError: Timed out retrying after 5000ms: expected '[ <p.input__warging>, 5 more... ]' to contain text 'Usuário e senha precisam ser preenchidos', but the text was 'É campo obrigatórioÉ campo obrigatório'\n    at LoginPage.verificarMensagemCampoObrigatorio (cypress/e2e/pages/loginPage.js:25:39)\n    at Context.eval (cypress/e2e/step_definitions/login/login.js:47:12)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": "- 'É campo obrigatórioÉ campo obrigatório'\n+ 'Usuário e senha precisam ser preenchidos'\n"
              },
              "uuid": "22955323-0e00-4049-a431-588f0d259818",
              "parentUUID": "bfc4f79f-41d9-48e8-9820-ba820240feed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login com usuário inválido",
              "fullTitle": "Login Tentativa de login com usuário inválido",
              "timedOut": null,
              "duration": 931,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9ccaccda-e554-4fcf-9735-e7ee8ae2bd21",
              "parentUUID": "bfc4f79f-41d9-48e8-9820-ba820240feed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login com sucesso",
              "fullTitle": "Login Login com sucesso",
              "timedOut": null,
              "duration": 2361,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "936c92d0-f44f-4fda-8600-ba4dba388ef7",
              "parentUUID": "bfc4f79f-41d9-48e8-9820-ba820240feed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout do sistema",
              "fullTitle": "Login Logout do sistema",
              "timedOut": null,
              "duration": 1975,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6d3f6a39-9cb9-45ac-aa8b-f790bfb312a5",
              "parentUUID": "bfc4f79f-41d9-48e8-9820-ba820240feed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ccaccda-e554-4fcf-9735-e7ee8ae2bd21",
            "936c92d0-f44f-4fda-8600-ba4dba388ef7",
            "6d3f6a39-9cb9-45ac-aa8b-f790bfb312a5"
          ],
          "failures": [
            "22955323-0e00-4049-a431-588f0d259818"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10729,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}