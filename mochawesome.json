{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 5,
    "pending": 0,
    "failures": 5,
    "testsRegistered": 10,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-08-20T11:10:21.348Z",
    "end": "2025-08-20T11:11:09.362Z",
    "duration": 48014
  },
  "results": [
    {
      "uuid": "da2f861a-3eb2-454d-b492-937a21b7820f",
      "title": "",
      "fullFile": "cypress/e2e/step_definitions/cadastro.feature",
      "file": "cypress/e2e/step_definitions/cadastro.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "26ddc3a3-1201-44b7-8481-f61cce2c9f72",
          "title": "Cadastro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cadastro com todos os campos preenchidos e saldo ativado",
              "fullTitle": "Cadastro Cadastro com todos os campos preenchidos e saldo ativado",
              "timedOut": null,
              "duration": 2244,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6ed9fe2e-f826-4477-b236-b3a580a29765",
              "parentUUID": "26ddc3a3-1201-44b7-8481-f61cce2c9f72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher nome",
              "fullTitle": "Cadastro Cadastro sem preencher nome",
              "timedOut": null,
              "duration": 1380,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f3f960ec-6fc8-4009-80fc-e6367cf05966",
              "parentUUID": "26ddc3a3-1201-44b7-8481-f61cce2c9f72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher email",
              "fullTitle": "Cadastro Cadastro sem preencher email",
              "timedOut": null,
              "duration": 6345,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Email não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Email não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "13902a6f-ab20-4906-bfe2-fc066fb830c6",
              "parentUUID": "26ddc3a3-1201-44b7-8481-f61cce2c9f72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher senha",
              "fullTitle": "Cadastro Cadastro sem preencher senha",
              "timedOut": null,
              "duration": 6420,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Senha não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Senha não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "fa2d3725-9312-4c6b-a674-8c970f3ed505",
              "parentUUID": "26ddc3a3-1201-44b7-8481-f61cce2c9f72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher confirmação de senha",
              "fullTitle": "Cadastro Cadastro sem preencher confirmação de senha",
              "timedOut": null,
              "duration": 6412,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Confirmar senha não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Confirmar senha não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "75e5bc8e-aaaa-4452-b7a2-148abfe95bbb",
              "parentUUID": "26ddc3a3-1201-44b7-8481-f61cce2c9f72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro com senha e confirmação diferentes",
              "fullTitle": "Cadastro Cadastro com senha e confirmação diferentes",
              "timedOut": null,
              "duration": 6539,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'As senhas devem ser iguais' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'As senhas devem ser iguais' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "eab6a919-f6c9-4588-aa0d-62c7eed1dfcd",
              "parentUUID": "26ddc3a3-1201-44b7-8481-f61cce2c9f72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ed9fe2e-f826-4477-b236-b3a580a29765",
            "f3f960ec-6fc8-4009-80fc-e6367cf05966"
          ],
          "failures": [
            "13902a6f-ab20-4906-bfe2-fc066fb830c6",
            "fa2d3725-9312-4c6b-a674-8c970f3ed505",
            "75e5bc8e-aaaa-4452-b7a2-148abfe95bbb",
            "eab6a919-f6c9-4588-aa0d-62c7eed1dfcd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 29340,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "36fef844-baf1-4846-a2eb-fb8cf2ef4e37",
      "title": "",
      "fullFile": "cypress/e2e/step_definitions/login.feature",
      "file": "cypress/e2e/step_definitions/login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b43cc417-9a23-411f-801d-01008b981e5d",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tentativa de login sem preencher campos obrigatórios",
              "fullTitle": "Login Tentativa de login sem preencher campos obrigatórios",
              "timedOut": null,
              "duration": 5417,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: expected '[ <p.input__warging>, 5 more... ]' to contain text 'Usuário e senha precisam ser preenchidos', but the text was 'É campo obrigatórioÉ campo obrigatório'",
                "estack": "AssertionError: Timed out retrying after 5000ms: expected '[ <p.input__warging>, 5 more... ]' to contain text 'Usuário e senha precisam ser preenchidos', but the text was 'É campo obrigatórioÉ campo obrigatório'\n    at LoginPage.verificarMensagemCampoObrigatorio (cypress/e2e/pages/loginPage.js:25:39)\n    at Context.eval (cypress/e2e/step_definitions/login/login.js:47:12)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": "- 'É campo obrigatórioÉ campo obrigatório'\n+ 'Usuário e senha precisam ser preenchidos'\n"
              },
              "uuid": "1e640e4e-2475-4e6e-b675-bd3c50d4e05b",
              "parentUUID": "b43cc417-9a23-411f-801d-01008b981e5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login com usuário inválido",
              "fullTitle": "Login Tentativa de login com usuário inválido",
              "timedOut": null,
              "duration": 763,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4228ede7-dae5-4641-8e96-19b9c3c7f614",
              "parentUUID": "b43cc417-9a23-411f-801d-01008b981e5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login com sucesso",
              "fullTitle": "Login Login com sucesso",
              "timedOut": null,
              "duration": 1929,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3b2f5947-0d04-4660-8f74-e4d323e080d6",
              "parentUUID": "b43cc417-9a23-411f-801d-01008b981e5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout do sistema",
              "fullTitle": "Login Logout do sistema",
              "timedOut": null,
              "duration": 1951,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2807aa78-c932-4f7c-8144-0712e29dd720",
              "parentUUID": "b43cc417-9a23-411f-801d-01008b981e5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4228ede7-dae5-4641-8e96-19b9c3c7f614",
            "3b2f5947-0d04-4660-8f74-e4d323e080d6",
            "2807aa78-c932-4f7c-8144-0712e29dd720"
          ],
          "failures": [
            "1e640e4e-2475-4e6e-b675-bd3c50d4e05b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10060,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}