{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 5,
    "pending": 0,
    "failures": 5,
    "testsRegistered": 10,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-08-27T11:10:24.107Z",
    "end": "2025-08-27T11:11:13.390Z",
    "duration": 49283
  },
  "results": [
    {
      "uuid": "d2e41ffe-5704-4607-8df7-7a6b01522338",
      "title": "",
      "fullFile": "cypress/e2e/step_definitions/cadastro.feature",
      "file": "cypress/e2e/step_definitions/cadastro.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7a174aaf-6fe4-4104-8238-602225b58549",
          "title": "Cadastro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cadastro com todos os campos preenchidos e saldo ativado",
              "fullTitle": "Cadastro Cadastro com todos os campos preenchidos e saldo ativado",
              "timedOut": null,
              "duration": 2682,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e7799f07-eb6f-4fa6-b79b-9e64c4e8b228",
              "parentUUID": "7a174aaf-6fe4-4104-8238-602225b58549",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher nome",
              "fullTitle": "Cadastro Cadastro sem preencher nome",
              "timedOut": null,
              "duration": 1457,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "52897763-3f70-45b8-b0a8-9b1149ab73d3",
              "parentUUID": "7a174aaf-6fe4-4104-8238-602225b58549",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher email",
              "fullTitle": "Cadastro Cadastro sem preencher email",
              "timedOut": null,
              "duration": 6566,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Email não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Email não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "6f92132d-b45f-4c3d-be57-1a804dc01f0d",
              "parentUUID": "7a174aaf-6fe4-4104-8238-602225b58549",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher senha",
              "fullTitle": "Cadastro Cadastro sem preencher senha",
              "timedOut": null,
              "duration": 6494,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Senha não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Senha não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "d23ef1d7-7b14-4395-a2df-19ad6c91a453",
              "parentUUID": "7a174aaf-6fe4-4104-8238-602225b58549",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher confirmação de senha",
              "fullTitle": "Cadastro Cadastro sem preencher confirmação de senha",
              "timedOut": null,
              "duration": 6368,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Confirmar senha não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Confirmar senha não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "95819b71-75b6-46fe-bf5c-ef16942ac830",
              "parentUUID": "7a174aaf-6fe4-4104-8238-602225b58549",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro com senha e confirmação diferentes",
              "fullTitle": "Cadastro Cadastro com senha e confirmação diferentes",
              "timedOut": null,
              "duration": 6597,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'As senhas devem ser iguais' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'As senhas devem ser iguais' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "6aab98aa-b8ba-4cae-9b63-eaf81c056db4",
              "parentUUID": "7a174aaf-6fe4-4104-8238-602225b58549",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7799f07-eb6f-4fa6-b79b-9e64c4e8b228",
            "52897763-3f70-45b8-b0a8-9b1149ab73d3"
          ],
          "failures": [
            "6f92132d-b45f-4c3d-be57-1a804dc01f0d",
            "d23ef1d7-7b14-4395-a2df-19ad6c91a453",
            "95819b71-75b6-46fe-bf5c-ef16942ac830",
            "6aab98aa-b8ba-4cae-9b63-eaf81c056db4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 30164,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "415c8b1f-4fa6-4eba-b49d-1f57e526b23c",
      "title": "",
      "fullFile": "cypress/e2e/step_definitions/login.feature",
      "file": "cypress/e2e/step_definitions/login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89656865-669c-4e9a-b309-faf4b79750ab",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tentativa de login sem preencher campos obrigatórios",
              "fullTitle": "Login Tentativa de login sem preencher campos obrigatórios",
              "timedOut": null,
              "duration": 5833,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: expected '[ <p.input__warging>, 5 more... ]' to contain text 'Usuário e senha precisam ser preenchidos', but the text was ''",
                "estack": "AssertionError: Timed out retrying after 5000ms: expected '[ <p.input__warging>, 5 more... ]' to contain text 'Usuário e senha precisam ser preenchidos', but the text was ''\n    at LoginPage.verificarMensagemCampoObrigatorio (cypress/e2e/pages/loginPage.js:25:39)\n    at Context.eval (cypress/e2e/step_definitions/login/login.js:47:12)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": "+ 'Usuário e senha precisam ser preenchidos'\n"
              },
              "uuid": "28d2514b-47e8-41e8-99d1-2ce8d9b8a084",
              "parentUUID": "89656865-669c-4e9a-b309-faf4b79750ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login com usuário inválido",
              "fullTitle": "Login Tentativa de login com usuário inválido",
              "timedOut": null,
              "duration": 751,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c64790d3-20be-475c-86d0-afaddb253ec9",
              "parentUUID": "89656865-669c-4e9a-b309-faf4b79750ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login com sucesso",
              "fullTitle": "Login Login com sucesso",
              "timedOut": null,
              "duration": 1831,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "05831cd2-2be8-4b10-9d78-1fb703c69f23",
              "parentUUID": "89656865-669c-4e9a-b309-faf4b79750ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout do sistema",
              "fullTitle": "Login Logout do sistema",
              "timedOut": null,
              "duration": 2075,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0cacba9e-2f0c-41ca-97fb-1f028e096874",
              "parentUUID": "89656865-669c-4e9a-b309-faf4b79750ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c64790d3-20be-475c-86d0-afaddb253ec9",
            "05831cd2-2be8-4b10-9d78-1fb703c69f23",
            "0cacba9e-2f0c-41ca-97fb-1f028e096874"
          ],
          "failures": [
            "28d2514b-47e8-41e8-99d1-2ce8d9b8a084"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10490,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}