{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 5,
    "pending": 0,
    "failures": 5,
    "testsRegistered": 10,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-08-13T11:11:30.640Z",
    "end": "2025-08-13T11:12:23.609Z",
    "duration": 52969
  },
  "results": [
    {
      "uuid": "4d620a6c-4433-438e-8a8f-8006fdcf2162",
      "title": "",
      "fullFile": "cypress/e2e/step_definitions/cadastro.feature",
      "file": "cypress/e2e/step_definitions/cadastro.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eae9339d-4d21-4c66-9db5-290fe71a2bb0",
          "title": "Cadastro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cadastro com todos os campos preenchidos e saldo ativado",
              "fullTitle": "Cadastro Cadastro com todos os campos preenchidos e saldo ativado",
              "timedOut": null,
              "duration": 2910,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2c6d4dd1-f440-4c87-88dd-c56771b4f4a6",
              "parentUUID": "eae9339d-4d21-4c66-9db5-290fe71a2bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher nome",
              "fullTitle": "Cadastro Cadastro sem preencher nome",
              "timedOut": null,
              "duration": 1646,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c80c28b4-2f1b-4072-8149-9d8ec567771d",
              "parentUUID": "eae9339d-4d21-4c66-9db5-290fe71a2bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher email",
              "fullTitle": "Cadastro Cadastro sem preencher email",
              "timedOut": null,
              "duration": 6970,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Email não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Email não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "bcf9e3b8-ea64-40e2-bba2-d1d834d005c4",
              "parentUUID": "eae9339d-4d21-4c66-9db5-290fe71a2bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher senha",
              "fullTitle": "Cadastro Cadastro sem preencher senha",
              "timedOut": null,
              "duration": 8012,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Senha não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Senha não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "ec22a529-efa4-4cab-8715-2957a04e75c5",
              "parentUUID": "eae9339d-4d21-4c66-9db5-290fe71a2bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro sem preencher confirmação de senha",
              "fullTitle": "Cadastro Cadastro sem preencher confirmação de senha",
              "timedOut": null,
              "duration": 6724,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Confirmar senha não pode ser vazio' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'Confirmar senha não pode ser vazio' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "da28d83d-6d68-4029-a2df-8f9cfed8671d",
              "parentUUID": "eae9339d-4d21-4c66-9db5-290fe71a2bb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro com senha e confirmação diferentes",
              "fullTitle": "Cadastro Cadastro com senha e confirmação diferentes",
              "timedOut": null,
              "duration": 6758,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'As senhas devem ser iguais' but never did.",
                "estack": "AssertionError: Timed out retrying after 5000ms: Expected to find content: 'As senhas devem ser iguais' but never did.\n    at Context.eval (cypress/e2e/step_definitions/cadastro/cadastro.js:43:24)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "72af12af-79d4-4002-9c5e-c5d204397c22",
              "parentUUID": "eae9339d-4d21-4c66-9db5-290fe71a2bb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c6d4dd1-f440-4c87-88dd-c56771b4f4a6",
            "c80c28b4-2f1b-4072-8149-9d8ec567771d"
          ],
          "failures": [
            "bcf9e3b8-ea64-40e2-bba2-d1d834d005c4",
            "ec22a529-efa4-4cab-8715-2957a04e75c5",
            "da28d83d-6d68-4029-a2df-8f9cfed8671d",
            "72af12af-79d4-4002-9c5e-c5d204397c22"
          ],
          "pending": [],
          "skipped": [],
          "duration": 33020,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "639a5cbf-0cf7-4a13-ab4d-d4392cd3f239",
      "title": "",
      "fullFile": "cypress/e2e/step_definitions/login.feature",
      "file": "cypress/e2e/step_definitions/login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "13cb809f-ebc8-4e99-842c-7377994a26b8",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tentativa de login sem preencher campos obrigatórios",
              "fullTitle": "Login Tentativa de login sem preencher campos obrigatórios",
              "timedOut": null,
              "duration": 5539,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: expected '[ <p.input__warging>, 5 more... ]' to contain text 'Usuário e senha precisam ser preenchidos', but the text was 'É campo obrigatórioÉ campo obrigatório'",
                "estack": "AssertionError: Timed out retrying after 5000ms: expected '[ <p.input__warging>, 5 more... ]' to contain text 'Usuário e senha precisam ser preenchidos', but the text was 'É campo obrigatórioÉ campo obrigatório'\n    at LoginPage.verificarMensagemCampoObrigatorio (cypress/e2e/pages/loginPage.js:25:39)\n    at Context.eval (cypress/e2e/step_definitions/login/login.js:47:12)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": "- 'É campo obrigatórioÉ campo obrigatório'\n+ 'Usuário e senha precisam ser preenchidos'\n"
              },
              "uuid": "328013cb-e8ba-430a-ac51-16bb82e251ee",
              "parentUUID": "13cb809f-ebc8-4e99-842c-7377994a26b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login com usuário inválido",
              "fullTitle": "Login Tentativa de login com usuário inválido",
              "timedOut": null,
              "duration": 900,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a48af030-9b3f-45de-a419-1219ab633649",
              "parentUUID": "13cb809f-ebc8-4e99-842c-7377994a26b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login com sucesso",
              "fullTitle": "Login Login com sucesso",
              "timedOut": null,
              "duration": 2205,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e4055df6-d10b-4323-9e4a-e6452e211340",
              "parentUUID": "13cb809f-ebc8-4e99-842c-7377994a26b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout do sistema",
              "fullTitle": "Login Logout do sistema",
              "timedOut": null,
              "duration": 2310,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ea51b879-ef5c-4b93-9a73-ef9fb72d10c9",
              "parentUUID": "13cb809f-ebc8-4e99-842c-7377994a26b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a48af030-9b3f-45de-a419-1219ab633649",
            "e4055df6-d10b-4323-9e4a-e6452e211340",
            "ea51b879-ef5c-4b93-9a73-ef9fb72d10c9"
          ],
          "failures": [
            "328013cb-e8ba-430a-ac51-16bb82e251ee"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10954,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}